{
  "format_version": "1.20.40",
  "minecraft:entity": {
    "description": {
      "identifier": "sf_nba:capybara",
      "is_spawnable": true,
      "is_summonable": true,
      "is_experimental": false,
      "properties": {
        "sf_nba:sleep": {
          "type": "bool",
          "client_sync": true,
          "default": "math.random_integer(0, 1)"
        },
        "sf_nba:is_swimming": {
          "client_sync": true,
          "type": "bool",
          "default": false
        }
      }
    },
    "component_groups": {
      "sf_nba:capybara_baby": {
        "minecraft:is_baby": {},
        "minecraft:scale": {
          "value": 0.5
        },
        "minecraft:collision_box": {
          "height": 0.5,
          "width": 0.65
        },
        "minecraft:ageable": {
          "duration": 1200,
          "feed_items": [
            "melon"
          ],
          "grow_up": {
            "event": "sf_nba:ageable_grow_up",
            "target": "self"
          }
        },
        "minecraft:behavior.follow_parent": {
          "priority": 6,
          "speed_multiplier": 1.1
        }
      },
      "sf_nba:capybara_adult": {
        "minecraft:experience_reward": {
          "on_bred": "Math.Random(1,7)",
          "on_death": "query.last_hit_by_player ? Math.Random(1,3) : 0"
        },
        "minecraft:collision_box": {
          "width": 0.8,
          "height": 0.9
        },
        "minecraft:loot": {
          "table": "loot_tables/entities/capybara.loot.json"
        },
        "minecraft:behavior.hurt_by_target": {
          "priority": 1,
          "entity_types": {
            "filters": [
              {
                "test": "is_family",
                "subject": "other",
                "value": "player"
              },
              {
                "test": "actor_health",
                "operator": ">",
                "value": 7
              }
            ]
          }
        },
        "minecraft:behavior.breed": {
          "priority": 1,
          "speed_multiplier": 1
        },
        "minecraft:breedable": {
          "require_tame": false,
          "breeds_with": {
            "mate_type": "sf_nba:capybara",
            "baby_type": "sf_nba:capybara",
            "breed_event": {
              "event": "sf_nba:entity_born",
              "target": "baby"
            }
          },
          "breed_items": [
            "melon"
          ]
        }
      },
      "sf_nba:night": {
        "minecraft:environment_sensor": {
          "triggers": [
            {
              "event": "sf_nba:day",
              "filters": {
                "test": "clock_time",
                "value": 0.75,
                "operator": ">="
              }
            }
          ]
        }
      },
      "sf_nba:add_rider": {
        "minecraft:addrider": {
          "entity_type": "sf_nba:capybara",
          "spawn_event": "sf_nba:spawn_baby"
        }
      },
      "sf_nba:is_swimming": {
        "minecraft:buoyant": {
          "base_buoyancy": 0.2,
          "apply_gravity": false,
          "simulate_waves": false,
          "liquid_blocks": [
            "minecraft:water",
            "minecraft:flowing_water"
          ]
        },
        "minecraft:behavior.random_stroll": {
          "priority": 8,
          "speed_multiplier": 1,
          "y_dist": 1
        }
      }
    },
    "components": {
      "minecraft:is_hidden_when_invisible": {},
      "minecraft:type_family": {
        "family": [
          "sf_nba:capybara",
          "mob"
        ]
      },
      "minecraft:breathable": {
        "total_supply": 15,
        "suffocate_time": 0,
        "breathes_water": true,
        "generates_bubbles": false
      },
      "minecraft:nameable": {},
      "minecraft:health": {
        "value": 14,
        "max": 14
      },
      "minecraft:hurt_on_condition": {
        "damage_conditions": [
          {
            "filters": {
              "test": "in_lava",
              "subject": "self",
              "operator": "==",
              "value": true
            },
            "cause": "lava",
            "damage_per_tick": 4
          }
        ]
      },
      "minecraft:movement": {
        "value": 0.2
      },
      "minecraft:underwater_movement": {
        "value": 0.15
      },
      "minecraft:navigation.walk": {
        "can_path_over_water": true,
        "avoid_damage_blocks": true
      },
      "minecraft:movement.basic": {},
      "minecraft:jump.static": {},
      "minecraft:variable_max_auto_step": {
        "base_value": 1
      },
      "minecraft:can_climb": {},
      "minecraft:collision_box": {
        "width": 0.9,
        "height": 0.9
      },
      "minecraft:leashable": {
        "soft_distance": 4,
        "hard_distance": 6,
        "max_distance": 10
      },
      "minecraft:balloonable": {
        "mass": 0.9
      },
      "minecraft:despawn": {
        "despawn_from_distance": {}
      },
      "minecraft:behavior.tempt": {
        "priority": 2,
        "speed_multiplier": 1.2,
        "items": [
          "melon"
        ]
      },
      "minecraft:behavior.random_stroll": {
        "priority": 8,
        "speed_multiplier": 1
      },
      "minecraft:behavior.look_at_player": {
        "priority": 9,
        "look_distance": 6,
        "probability": 0.02
      },
      "minecraft:behavior.panic": {
        "priority": 5,
        "speed_multiplier": 1.4
      },
      "minecraft:behavior.random_look_around": {
        "priority": 10
      },
      "minecraft:physics": {},
      "minecraft:pushable": {
        "is_pushable": true,
        "is_pushable_by_piston": true
      },
      "minecraft:conditional_bandwidth_optimization": {},
      "minecraft:environment_sensor": {
        "triggers": [
          {
            "event": "sf_nba:night",
            "filters": {
              "test": "clock_time",
              "value": 0.5,
              "operator": ">="
            }
          },
          {
            "filters": {
              "all_of": [
                {
                  "test": "in_water"
                },
                {
                  "test": "bool_property",
                  "domain": "sf_nba:is_swimming",
                  "value": false
                }
              ]
            },
            "event": "sf_nba:is_swimming"
          },
          {
            "filters": {
              "all_of": [
                {
                  "test": "on_ground"
                },
                {
                  "test": "bool_property",
                  "domain": "sf_nba:is_swimming",
                  "value": true
                }
              ]
            },
            "event": "sf_nba:is_not_swimming"
          }
        ]
      },
      "minecraft:behavior.nap": {
        "priority": 3,
        "cooldown_min": 2,
        "cooldown_max": 7,
        "mob_detect_dist": 12,
        "mob_detect_height": 6,
        "can_nap_filters": {
          "all_of": [
            {
              "test": "on_ground",
              "subject": "self",
              "value": true
            },
            {
              "test": "is_underground",
              "subject": "self",
              "value": false
            },
            {
              "test": "weather_at_position",
              "subject": "self",
              "operator": "!=",
              "value": "thunderstorm"
            },
            {
              "test": "hourly_clock_time",
              "operator": ">",
              "value": 6000
            },
            {
              "test": "hourly_clock_time",
              "operator": "<",
              "value": 13000
            },
            {
              "test": "in_block",
              "operator": "!=",
              "value": "water"
            }
          ]
        },
        "wake_mob_exceptions": {
          "any_of": [
            {
              "test": "trusts",
              "subject": "other",
              "value": true
            },
            {
              "test": "is_sneaking",
              "subject": "other",
              "value": true
            }
          ]
        }
      },
      "minecraft:rideable": {
        "controlling_seat": 0,
        "crouching_skip_interact": true,
        "family_types": [
          "sf_nba:capybara",
          "player",
          "sf_nba:bird",
          "sf_nba:cpillar",
          "sf_nba:squirrel",
          "sf_nba:duck"
        ],
        "interact_text": "Ride",
        "seat_count": 1,
        "seats": [
          {
            "position": [
              0,
              0.8,
              0
            ],
            "max_rider_count": 1
          }
        ]
      }
    },
    "events": {
      "minecraft:entity_spawned": {
        "randomize": [
          {
            "weight": 95,
            "trigger": "sf_nba:spawn_adult"
          },
          {
            "weight": 5,
            "trigger": "sf_nba:entity_born"
          }
        ]
      },
      "sf_nba:spawn_adult": {
        "randomize": [
          {
            "add": {
              "component_groups": [
                "sf_nba:capybara_adult",
                "sf_nba:add_rider"
              ]
            },
            "weight": 20
          },
          {
            "add": {
              "component_groups": [
                "sf_nba:capybara_adult"
              ]
            },
            "weight": 80
          }
        ]
      },
      "sf_nba:spawn_baby": {
        "add": {
          "component_groups": [
            "sf_nba:capybara_baby"
          ]
        }
      },
      "sf_nba:entity_born": {
        "add": {
          "component_groups": [
            "sf_nba:capybara_baby"
          ]
        }
      },
      "sf_nba:ageable_grow_up": {
        "remove": {
          "component_groups": [
            "sf_nba:capybara_baby"
          ]
        },
        "add": {
          "component_groups": [
            "sf_nba:capybara_adult"
          ]
        }
      },
      "sf_nba:night": {
        "add": {
          "component_groups": [
            "sf_nba:night"
          ]
        },
        "randomize": [
          {
            "set_property": {
              "sf_nba:sleep": false
            },
            "weight": 1
          },
          {
            "set_property": {
              "sf_nba:sleep": true
            },
            "weight": 1
          }
        ]
      },
      "sf_nba:day": {
        "remove": {
          "component_groups": [
            "sf_nba:night"
          ]
        }
      },
      "sf_nba:is_swimming": {
        "set_property": {
          "sf_nba:is_swimming": true
        },
        "add": {
          "component_groups": [
            "sf_nba:is_swimming"
          ]
        }
      },
      "sf_nba:is_not_swimming": {
        "set_property": {
          "sf_nba:is_swimming": false
        },
        "remove": {
          "component_groups": [
            "sf_nba:is_swimming"
          ]
        }
      }
    }
  }
}