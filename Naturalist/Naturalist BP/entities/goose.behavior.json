{
  "format_version": "1.20.30",
  "minecraft:entity": {
    "description": {
      "identifier": "sf_nba:goose",
      "is_spawnable": true,
      "is_summonable": true,
      "is_experimental": false,
      "properties": {
        "sf_nba:is_swimming": {
          "client_sync": true,
          "type": "bool",
          "default": false
        }
      },
	  "animations": {
		"add_angry_stats": "controller.animation.sf_nba.is_angry.stats"
	  },
	  "scripts": {
		"animate": [
		  "add_angry_stats"
		]
	  }
    },
    "component_groups": {
      "sf_nba:baby": {
        "minecraft:is_baby": {},
        "minecraft:scale": {
          "value": 0.5
        },
        "minecraft:ageable": {
          "duration": 1200,
          "feed_items": [
            "wheat_seeds",
            "beetroot_seeds",
            "melon_seeds",
            "pumpkin_seeds",
            "pitcher_pod",
            "torchflower_seeds"
          ],
          "grow_up": {
            "event": "sf_nba:ageable_grow_up",
            "target": "self"
          }
        },
        "minecraft:behavior.panic": {
          "priority": 3,
          "speed_multiplier": 2
        },
        "minecraft:behavior.follow_parent": {
          "priority": 4,
          "speed_multiplier": 1.25
        }
      },
      "sf_nba:baby_wild": {
        "minecraft:on_target_acquired": {
          "event": "sf_nba:on_scared",
          "target": "self"
        },
        "minecraft:behavior.nearest_attackable_target": {
          "priority": 2,
          "entity_types": {
            "filters": {
              "test": "is_family",
              "subject": "other",
              "value": "player"
            },
            "max_dist": 4
          }
        }
      },
      "sf_nba:baby_scared": {
        "minecraft:angry": {
          "duration": 1,
          "broadcast_anger": true,
          "broadcast_range": 2,
          "broadcast_filters": [
            {
              "test": "is_baby",
              "value": false
            }
          ],
          "calm_event": {
            "event": "sf_nba:baby_on_calm",
            "target": "self"
          }
        }
      },
      "sf_nba:goose_wild": {
        "minecraft:on_target_acquired": {
          "event": "sf_nba:become_angry",
          "target": "self"
        },
        "minecraft:tameable": {
          "probability": 0.33,
          "tame_items": [
            "wheat_seeds",
            "beetroot_seeds",
            "melon_seeds",
            "pumpkin_seeds",
            "pitcher_pod",
            "torchflower_seeds"
          ],
          "tame_event": {
            "event": "sf_nba:on_tame",
            "target": "self"
          }
        }
      },
      "sf_nba:goose_tame": {
        "minecraft:is_tamed": {}
      },
      "sf_nba:goose_adult": {
        "minecraft:loot": {
          "table": "loot_tables/sf/nba/entities/goose.loot.json"
        },
        "minecraft:experience_reward": {
          "on_bred": "Math.Random(1,7)",
          "on_death": "query.last_hit_by_player ? Math.Random(1,3) : 0"
        },
        "minecraft:spawn_entity": {
          "entities": {
            "min_wait_time": 300,
            "max_wait_time": 600,
            "spawn_sound": "plop",
            "spawn_item": "egg",
            "filters": {
              "test": "rider_count",
              "subject": "self",
              "operator": "==",
              "value": 0
            }
          }
        },
        "minecraft:breedable": {
          "require_tame": false,
          "require_full_health": false,
          "breed_items": [
            "wheat_seeds",
            "beetroot_seeds",
            "melon_seeds",
            "pumpkin_seeds",
            "pitcher_pod",
            "torchflower_seeds"
          ],
          "breeds_with": {
            "mate_type": "sf_nba:goose",
            "baby_type": "sf_nba:goose",
            "breed_event": {
              "event": "sf_nba:entity_born",
              "target": "baby"
            }
          }
        },
        "minecraft:behavior.breed": {
          "priority": 2,
          "speed_multiplier": 1
        }
      },
      "sf_nba:goose_angry": {
        "minecraft:angry": {
          "duration": 20,
          "duration_delta": 12,
          "broadcast_anger": true,
          "broadcast_anger_on_being_attacked": true,
          "broadcast_range": 3,
          "calm_event": {
            "event": "sf_nba:on_calm",
            "target": "self"
          }
        },
        "minecraft:on_target_escape": {
          "event": "sf_nba:on_calm",
          "target": "self"
        },
        "minecraft:behavior.delayed_attack": {
          "attack_duration": 0.53,
          "attack_once": false,
          "hit_delay_pct": 0.7,
          "random_stop_interval": 0,
          "reach_multiplier": 1.5,
          "speed_multiplier": 2,
          "require_complete_path": true,
          "track_target": false
        },
        "minecraft:behavior.nearest_attackable_target": {
          "priority": 2,
          "entity_types": {
            "filters": {
              "test": "is_family",
              "subject": "other",
              "value": "player"
            },
            "max_dist": 12
          }
        }
      },
      "sf_nba:goose_calm": {
        "minecraft:tameable": {
          "probability": 0.33,
          "tame_items": "bone",
          "tame_event": {
            "event": "minecraft:on_tame",
            "target": "self"
          }
        },
        "minecraft:on_target_acquired": {
          "event": "sf_nba:become_angry",
          "target": "self"
        },
        "minecraft:on_friendly_anger": {
          "event": "sf_nba:become_angry",
          "target": "self"
        }
      },
      "sf_nba:canadian_goose": {
        "minecraft:variant": {
          "value": 0
        }
      },
      "sf_nba:white_goose": {
        "minecraft:variant": {
          "value": 1
        }
      },
      "sf_nba:is_swimming": {
        "minecraft:buoyant": {
          "base_buoyancy": 0.499,
          "apply_gravity": false,
          "simulate_waves": false,
          "big_wave_probability": 0.0,
          "big_wave_speed": 0.0,
          "liquid_blocks": [
            "minecraft:water",
            "minecraft:flowing_water"
          ]
        }
      }
    },
    "components": {
      "minecraft:is_hidden_when_invisible": {},
      "minecraft:type_family": {
        "family": [
          "sf_nba:goose",
          "mob"
        ]
      },
      "minecraft:behavior.hurt_by_target": {
        "priority": 1
      },
      "minecraft:attack": {
        "damage": 1
      },
      "minecraft:behavior.move_to_water": {
        "priority": 7,
        "search_range": 15,
        "search_height": 5,
        "goal_radius": 0.1
      },
      "minecraft:behavior.random_stroll": {
        "priority": 5,
        "speed_multiplier": 0.7
      },
      "minecraft:behavior.random_swim": {
        "priority": 4
      },
      "minecraft:behavior.look_at_player": {
        "priority": 6,
        "look_distance": 6,
        "probability": 0.02
      },
      "minecraft:behavior.random_look_around": {
        "priority": 7
      },
      "minecraft:water_movement": {
        "drag_factor": 0.1
      },
      "minecraft:breathable": {
        "total_supply": 40,
        "suffocate_time": 0
      },
      "minecraft:behavior.tempt": {
        "within_radius": 16,
        "speed_multiplier": 1.15,
        "can_get_scared": true,
        "items": [
          "wheat_seeds",
          "beetroot_seeds",
          "melon_seeds",
          "pumpkin_seeds",
          "pitcher_pod",
          "torchflower_seeds"
        ]
      },
      "minecraft:damage_sensor": {
        "triggers": {
          "cause": "fall",
          "deals_damage": false
        }
      },
      "minecraft:hurt_on_condition": {
        "damage_conditions": [
          {
            "filters": {
              "test": "in_lava",
              "subject": "self",
              "operator": "==",
              "value": true
            },
            "cause": "lava",
            "damage_per_tick": 4
          }
        ]
      },
      "minecraft:environment_sensor": {
        "triggers": [
          {
            "filters": {
              "all_of": [
                {
                  "test": "in_water"
                },
                {
                  "test": "bool_property",
                  "domain": "sf_nba:is_swimming",
                  "value": false
                }
              ]
            },
            "event": "sf_nba:is_swimming"
          },
          {
            "filters": {
              "all_of": [
                {
                  "test": "on_ground"
                },
                {
                  "test": "bool_property",
                  "domain": "sf_nba:is_swimming",
                  "value": true
                }
              ]
            },
            "event": "sf_nba:is_not_swimming"
          }
        ]
      },
      "minecraft:movement": {
        "value": 0.19
      },
      "minecraft:underwater_movement": {
        "value": 0.19
      },
      "minecraft:movement.basic": {},
      "minecraft:jump.static": {},
      "minecraft:despawn": {
        "despawn_from_distance": {}
      },
      "minecraft:navigation.walk": {
        "can_sink": false,
        "avoid_damage_blocks": true
      },
      "minecraft:health": {
        "value": 9,
        "max": 9
      },
      "minecraft:collision_box": {
        "width": 0.55,
        "height": 1
      },
      "minecraft:balloonable": {
        "mass": 0.75
      },
      "minecraft:knockback_resistance": {
        "value": 0.2
      },
      "minecraft:nameable": {},
      "minecraft:physics": {
        "has_gravity": true,
        "has_collision": true
      },
      "minecraft:push_through": {
        "value": 0
      },
      "minecraft:pushable": {
        "is_pushable": true,
        "is_pushable_by_piston": true
      }
    },
    "events": {
      "minecraft:entity_spawned": {
        "randomize": [
          {
            "weight": 95,
            "trigger": "sf_nba:spawn_adult"
          },
          {
            "weight": 5,
            "trigger": "sf_nba:entity_born"
          }
        ]
      },
      "sf_nba:spawn_adult": {
        "add": {
          "component_groups": [
            "sf_nba:goose_adult",
            "sf_nba:goose_wild"
          ]
        },
        "trigger": "sf_nba:randomize_variant"
      },
      "sf_nba:randomize_variant": {
        "randomize": [
          {
            "add": {
              "component_groups": [
                "sf_nba:canadian_goose"
              ]
            },
            "weight": 1
          },
          {
            "add": {
              "component_groups": [
                "sf_nba:white_goose"
              ]
            },
            "weight": 1
          }
        ]
      },
      "sf_nba:entity_born": {
        "add": {
          "component_groups": [
            "sf_nba:baby",
            "sf_nba:baby_wild"
          ]
        },
        "trigger": "sf_nba:randomize_variant"
      },
      "sf_nba:ageable_grow_up": {
        "remove": {
          "component_groups": [
            "sf_nba:baby"
          ]
        },
        "add": {
          "component_groups": [
            "sf_nba:goose_adult",
            "sf_nba:goose_calm"
          ]
        }
      },
      "sf_nba:baby_on_calm": {
        "remove": {
          "component_groups": [
            "sf_nba:baby_scared"
          ]
        },
        "add": {
          "component_groups": [
            "sf_nba:baby_wild"
          ]
        }
      },
      "sf_nba:on_scared": {
        "remove": {
          "component_groups": [
            "sf_nba:baby_wild"
          ]
        },
        "add": {
          "component_groups": [
            "sf_nba:baby_scared"
          ]
        }
      },
      "sf_nba:become_angry": {
        "remove": {
          "component_groups": [
            "sf_nba:goose_calm"
          ]
        },
        "add": {
          "component_groups": [
            "sf_nba:goose_angry"
          ]
        }
      },
      "sf_nba:on_tame": {
        "remove": {
          "component_groups": [
            "sf_nba:goose_wild"
          ]
        },
        "add": {
          "component_groups": [
            "sf_nba:goose_tame"
          ]
        }
      },
      "sf_nba:on_calm": {
        "remove": {
          "component_groups": [
            "sf_nba:goose_angry"
          ]
        },
        "add": {
          "component_groups": [
            "sf_nba:goose_calm"
          ]
        }
      },
      "sf_nba:is_swimming": {
        "set_property": {
          "sf_nba:is_swimming": true
        },
        "add": {
          "component_groups": [
            "sf_nba:is_swimming"
          ]
        }
      },
      "sf_nba:is_not_swimming": {
        "set_property": {
          "sf_nba:is_swimming": false
        },
        "remove": {
          "component_groups": [
            "sf_nba:is_swimming"
          ]
        }
      }
    }
  }
}