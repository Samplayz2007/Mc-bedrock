{
  "format_version": "1.20.0",
  "minecraft:entity": {
    "description": {
      "identifier": "sf_nba:emperor_penguin",
      "properties": {
        "sf_nba:slip_anim": {
          "client_sync": true,
          "type": "enum",
          "values": [
            "none",
            "fall",
            "slide"
          ],
          "default": "none"
        }
      },
      "animations": {
        "controller.animation.sf_nba.emperor_penguin.fall": "controller.animation.sf_nba.emperor_penguin.fall"
      },
      "scripts": {
        "animate": [
          "controller.animation.sf_nba.emperor_penguin.fall"
        ]
      },
      "is_summonable": true,
      "is_spawnable": true
    },
    "components": {
      "minecraft:is_hidden_when_invisible": {},
      "minecraft:breathable": {
        "total_supply": 240,
        "suffocate_time": 0,
        "breathes_air": true,
        "breathes_water": false,
        "generates_bubbles": false
      },
      "minecraft:collision_box": {
        "width": 0.6,
        "height": 1.4
      },
      "minecraft:nameable": {},
      "minecraft:health": {
        "value": 18,
        "max": 18
      },
      "minecraft:hurt_on_condition": {
        "damage_conditions": [
          {
            "filters": {
              "test": "in_lava",
              "subject": "self",
              "operator": "==",
              "value": true
            },
            "cause": "lava",
            "damage_per_tick": 4
          }
        ]
      },
      "minecraft:movement": {
        "value": 0.15
      },
      "minecraft:underwater_movement": {
        "value": 0.23
      },
      "minecraft:navigation.walk": {
        "can_path_over_water": true,
        "avoid_water": false,
        "can_swim": true
      },
      "minecraft:movement.basic": {},
      "minecraft:jump.static": {},
      "minecraft:can_climb": {},
      "minecraft:leashable": {
        "soft_distance": 4,
        "hard_distance": 6,
        "max_distance": 10
      },
      "minecraft:despawn": {
        "despawn_from_distance": {}
      },
      "minecraft:physics": {},
      "minecraft:pushable": {
        "is_pushable": true,
        "is_pushable_by_piston": true
      },
      "minecraft:conditional_bandwidth_optimization": {},
      "minecraft:type_family": {
        "family": [
          "sf_nba:emperor_penguin",
          "mob"
        ]
      },
      "minecraft:environment_sensor": {
        "triggers": [
          {
            "filters": {
              "all_of": [
                {
                  "test": "in_water"
                },
                {
                  "test": "has_component",
                  "operator": "!=",
                  "value": "minecraft:behavior.swim_idle"
                }
              ]
            },
            "event": "sf_nba:is_in_water"
          },
          {
            "filters": {
              "all_of": [
                {
                  "test": "in_water",
                  "value": false
                },
                {
                  "test": "has_component",
                  "value": "minecraft:behavior.swim_idle"
                }
              ]
            },
            "event": "sf_nba:not_in_water"
          }
        ]
      }
    },
    "component_groups": {
      "sf_nba:adult": {
        "minecraft:experience_reward": {
          "on_bred": "math.random(1,7)",
          "on_death": "query.last_hit_by_player ? math.random(1,3):0"
        },
        "minecraft:behavior.breed": {
          "priority": 3,
          "speed_multiplier": 1
        },
        "minecraft:breedable": {
          "require_tame": false,
          "breeds_with": {
            "mate_type": "sf_nba:emperor_penguin",
            "baby_type": "sf_nba:emperor_penguin_egg",
            "breed_event": {
              "event": "sf_nba:stay_near_egg",
              "target": "self"
            }
          },
          "breed_items": [
            "minecraft:cod",
            "minecraft:salmon",
            "minecraft:tropical_fish",
            "sf_nba:catfish",
            "sf_nba:bass"
          ]
        }
      },
      "sf_nba:baby": {
        "minecraft:is_baby": {},
        "minecraft:scale": {
          "value": 0.5
        },
        "minecraft:ageable": {
          "duration": 1200,
          "feed_items": [
            "minecraft:cod",
            "minecraft:salmon",
            "minecraft:tropical_fish",
            "sf_nba:catfish",
            "sf_nba:bass"
          ],
          "grow_up": {
            "event": "sf_nba:adult",
            "target": "self"
          }
        },
        "minecraft:behavior.follow_parent": {
          "priority": 3,
          "speed_multiplier": 1.1
        }
      },
      "sf_nba:barter": {
        "minecraft:barter": {
          "barter_table": "loot_tables/sf/nba/entities/penguin_barter.loot.json",
          "cooldown_after_being_attacked": 20
        },
        "minecraft:shareables": {
          "items": [
            {
              "item": "minecraft:cod",
              "priority": 1,
              "pickup_limit": 1,
              "admire": true,
              "barter": true
            }
          ]
        },
        "minecraft:behavior.barter": {
          "priority": 4
        },
        "minecraft:behavior.admire_item": {
          "priority": 2,
          "admire_item_sound": "admire",
          "sound_interval": {
            "range_min": 2,
            "range_max": 5
          }
        },
        "minecraft:admire_item": {
          "duration": 8,
          "cooldown_after_being_attacked": 20
        },
        "minecraft:equip_item": {},
        "minecraft:behavior.equip_item": {
          "priority": 5
        },
        "minecraft:behavior.pickup_items": {
          "priority": 6,
          "max_dist": 10,
          "goal_radius": 2,
          "speed_multiplier": 1.2,
          "pickup_based_on_chance": false,
          "can_pickup_any_item": false,
          "cooldown_after_being_attacked": 20
        }
      },
      "sf_nba:stay_near_egg": {
        "minecraft:behavior.nearest_attackable_target": {
          "priority": 1,
          "must_see": false,
          "entity_types": [
            {
              "filters": {
                "all_of": [
                  {
                    "test": "is_family",
                    "subject": "other",
                    "value": "sf_nba:emperor_penguin_egg"
                  }
                ]
              },
              "max_dist": 32
            }
          ]
        },
        "minecraft:follow_range": {
          "value": 32
        },
        "minecraft:on_target_escape": {
          "event": "sf_nba:remove_stay_near_egg"
        }
      },
      "sf_nba:not_near_egg": {
        "minecraft:behavior.melee_attack": {
          "priority": 1,
          "speed_multiplier": 1.4,
          "track_target": false,
          "reach_multiplier": 0
        },
        "minecraft:attack": {
          "damage": 0
        },
        "minecraft:target_nearby_sensor": {
          "inside_range": 3,
          "must_see": false,
          "on_inside_range": {
            "event": "sf_nba:is_near_egg"
          }
        }
      },
      "sf_nba:is_near_egg": {
        "minecraft:target_nearby_sensor": {
          "outside_range": 6,
          "must_see": false,
          "on_outside_range": {
            "event": "sf_nba:not_near_egg"
          }
        }
      },
      "sf_nba:walk_behaviors": {
        "minecraft:behavior.panic": {
          "priority": 1,
          "speed_multiplier": 1.25
        },
        "minecraft:behavior.tempt": {
          "priority": 7,
          "speed_multiplier": 1.25,
          "items": [
            "minecraft:cod",
            "minecraft:salmon",
            "minecraft:tropical_fish",
            "sf_nba:catfish",
            "sf_nba:bass"
          ]
        },
        "minecraft:behavior.random_stroll": {
          "priority": 11,
          "speed_multiplier": 0.8
        },
        "minecraft:behavior.look_at_player": {
          "priority": 12,
          "look_distance": 6,
          "probability": 0.02
        },
        "minecraft:behavior.random_look_around": {
          "priority": 13
        }
      },
      "sf_nba:swim_behaviors": {
        "minecraft:behavior.swim_idle": {
          "priority": 8,
          "idle_time": 5,
          "success_rate": 0.1
        },
        "minecraft:behavior.random_swim": {
          "priority": 8,
          "speed_multiplier": 1,
          "xz_dist": 16,
          "y_dist": 4,
          "interval": 0
        },
        "minecraft:behavior.swim_wander": {
          "priority": 8,
          "interval": 0.1,
          "look_ahead": 2,
          "speed_multiplier": 1,
          "wander_time": 5
        },
        "minecraft:behavior.timer_flag_1": {
          "cooldown_range": [
            0,
            0
          ],
          "duration_range": [
            5,
            10
          ],
          "on_end": {
            "event": "sf_nba:move_to_land"
          }
        }
      },
      "sf_nba:move_to_land": {
        "minecraft:behavior.move_to_land": {
          "priority": 1,
          "goal_radius": 0.5,
          "search_count": 10,
          "search_height": 1,
          "search_range": 7
        }
      },
      "sf_nba:fall": {
        "minecraft:timer": {
          "looping": false,
          "time": 1,
          "time_down_event": {
            "event": "sf_nba:reset_slip_anim",
            "target": "self"
          }
        }
      },
      "sf_nba:slide": {
        "minecraft:timer": {
          "looping": false,
          "time": 3,
          "time_down_event": {
            "event": "sf_nba:reset_slip_anim",
            "target": "self"
          }
        }
      }
    },
    "events": {
      "minecraft:entity_spawned": {
        "sequence": [
          {
            "add": {
              "component_groups": [
                "sf_nba:walk_behaviors"
              ]
            }
          },
          {
            "randomize": [
              {
                "trigger": "sf_nba:adult",
                "weight": 95
              },
              {
                "trigger": "sf_nba:baby",
                "weight": 5
              }
            ]
          }
        ]
      },
      "sf_nba:adult": {
        "remove": {
          "component_groups": [
            "sf_nba:baby"
          ]
        },
        "add": {
          "component_groups": [
            "sf_nba:adult",
            "sf_nba:barter"
          ]
        }
      },
      "sf_nba:baby": {
        "add": {
          "component_groups": [
            "sf_nba:baby"
          ]
        }
      },
      "minecraft:entity_born": {
        "add": {
          "component_groups": [
            "sf_nba:walk_behaviors",
            "sf_nba:baby"
          ]
        }
      },
      "sf_nba:stay_near_egg": {
        "add": {
          "component_groups": [
            "sf_nba:stay_near_egg",
            "sf_nba:not_near_egg"
          ]
        }
      },
      "sf_nba:not_near_egg": {
        "remove": {
          "component_groups": [
            "sf_nba:is_near_egg"
          ]
        },
        "add": {
          "component_groups": [
            "sf_nba:not_near_egg"
          ]
        }
      },
      "sf_nba:is_near_egg": {
        "remove": {
          "component_groups": [
            "sf_nba:not_near_egg"
          ]
        },
        "add": {
          "component_groups": [
            "sf_nba:is_near_egg"
          ]
        }
      },
      "sf_nba:remove_stay_near_egg": {
        "remove": {
          "component_groups": [
            "sf_nba:stay_near_egg",
            "sf_nba:not_near_egg",
            "sf_nba:is_near_egg"
          ]
        }
      },
      "sf_nba:fall": {
        "set_property": {
          "sf_nba:slip_anim": "fall"
        },
        "remove": {
          "component_groups": [
            "sf_nba:walk_behaviors"
          ]
        },
        "add": {
          "component_groups": [
            "sf_nba:fall"
          ]
        }
      },
      "sf_nba:slide": {
        "set_property": {
          "sf_nba:slip_anim": "slide"
        },
        "remove": {
          "component_groups": [
            "sf_nba:walk_behaviors"
          ]
        },
        "add": {
          "component_groups": [
            "sf_nba:slide"
          ]
        }
      },
      "sf_nba:reset_slip_anim": {
        "set_property": {
          "sf_nba:slip_anim": "none"
        },
        "remove": {
          "component_groups": [
            "sf_nba:fall",
            "sf_nba:slide"
          ]
        },
        "add": {
          "component_groups": [
            "sf_nba:walk_behaviors"
          ]
        }
      },
      "sf_nba:is_in_water": {
        "remove": {
          "component_groups": [
            "sf_nba:walk_behaviors",
            "sf_nba:barter"
          ]
        },
        "add": {
          "component_groups": [
            "sf_nba:swim_behaviors"
          ]
        }
      },
      "sf_nba:not_in_water": {
        "sequence": [
          {
            "remove": {
              "component_groups": [
                "sf_nba:swim_behaviors",
                "sf_nba:move_to_land"
              ]
            },
            "add": {
              "component_groups": [
                "sf_nba:walk_behaviors"
              ]
            }
          },
          {
            "filters": {
              "test": "has_component",
              "operator": "!=",
              "value": "minecraft:is_baby"
            },
            "add": {
              "component_groups": [
                "sf_nba:barter"
              ]
            }
          }
        ]
      },
      "sf_nba:move_to_land": {
        "add": {
          "component_groups": [
            "sf_nba:move_to_land"
          ]
        }
      }
    }
  }
}